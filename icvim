#!/bin/bash

SCRIPTPATH="$(dirname "`readlink -f $0`")"
source "$SCRIPTPATH/common.sh" || exit 1

load_config
check_config ICVIM_OPEN="gvim -f"
check_config ICVIM_COMPILE_C="gcc -Wall -std=c99"
check_config ICVIM_COMPILE_CPP="g++ -Wall"
need_binaries cpp g++ bash inotifywait mktemp $(echo "$ICVIM_OPEN" | cut -d' ' -f1)

declare -A compiler_cmd
compiler_cmd+=( ["c"]="$ICVIM_COMPILE_C" )
compiler_cmd+=( ["cpp"]="$ICVIM_COMPILE_CPP" )
compiler_cmd+=( ["sh"]="run_bash" )
compiler_cmd+=( ["py"]="run_python" )

run_bash() {
    # We don't support compflags
    compflags=" "
    local bash_script="$1"
    local target="$3"
    echo '#!/bin/bash' > "$target"
    cat "$bash_script" >> "$target"
    chmod +x "$target"
}

run_python() {
    # We don't support compflags
    compflags=" "
    local python_script="$1"
    local target="$3"
    echo '#!/usr/bin/env python' > "$target"
    cat "$python_script" >> "$target"
    chmod +x "$target"
}

edit_file() {
    local lock_file="$1"
    local edit_file="$2"
    $ICVIM_OPEN "$edit_file" 2>/dev/null
    rm "$lock_file"
}

icvim_usage() {
    echo -n "Usage: $(basename $0) [flags] <filename.{"
    for ftype in "${!compiler_cmd[@]}"; do
        echo -n "$ftype,"
    done
    echo "}>"
}

if [ $# -lt 1 ]; then
    icvim_usage
    exit 1
fi

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    icvim_usage
    exit 0
fi

filename=""
compflags=""
compargs=""

while [ $# -gt 0 ]; do
    case "$1" in
        -*)
            if [ "$1" == "-a" ]; then
                shift
                compargs="$compargs $1"
            else
                compflags="$compflags $1"
            fi
            ;;
        *)
            filename="$1"
            ;;
    esac
    shift
done

if [ -d "$filename" ]; then
    echo "Argument must be file."
    exit 1
fi

suffix="${filename##*.}"
if [ -z "${compiler_cmd[$suffix]}" ]; then
    echo "Unsupported suffix '$suffix'"
    exit 1
fi

compname="$(mktemp --tmpdir= output.XXXXXX)"

lockfile="$(mktemp --tmpdir= icvim.XXXXXX)"
edit_file "$lockfile" "$filename" &

sleep 0.1

while [ 1 ]; do
    if [ ! -e "$lockfile" ]; then
        break
    fi

    change="$(inotifywait "$lockfile" "$filename" 2>/dev/null)"
    change_file="$(echo "$change" | cut -d' ' -f1)"
    change_event="$(echo "$change" | cut -d' ' -f2)"

    if [ "$change_file" == "$lockfile" ]; then
        # assume konsole has closed
        break
    fi

    if [[ "$change_event" == "CLOSE_WRITE,CLOSE" ||
          "$change_event" == "MOVE_SELF" ]]; then
        echo "--- ${compiler_cmd[$suffix]} ${filename} ${compflags} ---"
        sleep 0.1
        ${compiler_cmd[$suffix]} $filename $compflags -o "$compname"
        if [ $? -eq 0 ]; then
            $compname $compargs
        fi
        echo "---"
    fi
done

rm -f "$compname"
